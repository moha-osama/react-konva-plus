{"ast":null,"code":"import { HttpRequest } from \"@smithy/protocol-http\";\nimport { isStreaming } from \"./isStreaming\";\nimport { createReadStreamOnBuffer } from \"./streams/create-read-stream-on-buffer\";\nimport { validateChecksumFromResponse } from \"./validateChecksumFromResponse\";\nexport const flexibleChecksumsResponseMiddlewareOptions = {\n  name: \"flexibleChecksumsResponseMiddleware\",\n  toMiddleware: \"deserializerMiddleware\",\n  relation: \"after\",\n  tags: [\"BODY_CHECKSUM\"],\n  override: true\n};\nexport const flexibleChecksumsResponseMiddleware = (config, middlewareConfig) => next => async args => {\n  if (!HttpRequest.isInstance(args.request)) {\n    return next(args);\n  }\n  const input = args.input;\n  const result = await next(args);\n  const response = result.response;\n  let collectedStream = undefined;\n  const {\n    requestValidationModeMember,\n    responseAlgorithms\n  } = middlewareConfig;\n  if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n    const isStreamingBody = isStreaming(response.body);\n    if (isStreamingBody) {\n      collectedStream = await config.streamCollector(response.body);\n      response.body = createReadStreamOnBuffer(collectedStream);\n    }\n    await validateChecksumFromResponse(result.response, {\n      config,\n      responseAlgorithms\n    });\n    if (isStreamingBody && collectedStream) {\n      response.body = createReadStreamOnBuffer(collectedStream);\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["HttpRequest","isStreaming","createReadStreamOnBuffer","validateChecksumFromResponse","flexibleChecksumsResponseMiddlewareOptions","name","toMiddleware","relation","tags","override","flexibleChecksumsResponseMiddleware","config","middlewareConfig","next","args","isInstance","request","input","result","response","collectedStream","undefined","requestValidationModeMember","responseAlgorithms","isStreamingBody","body","streamCollector"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsResponseMiddleware.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nimport { isStreaming } from \"./isStreaming\";\nimport { createReadStreamOnBuffer } from \"./streams/create-read-stream-on-buffer\";\nimport { validateChecksumFromResponse } from \"./validateChecksumFromResponse\";\nexport const flexibleChecksumsResponseMiddlewareOptions = {\n    name: \"flexibleChecksumsResponseMiddleware\",\n    toMiddleware: \"deserializerMiddleware\",\n    relation: \"after\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nexport const flexibleChecksumsResponseMiddleware = (config, middlewareConfig) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const input = args.input;\n    const result = await next(args);\n    const response = result.response;\n    let collectedStream = undefined;\n    const { requestValidationModeMember, responseAlgorithms } = middlewareConfig;\n    if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n        const isStreamingBody = isStreaming(response.body);\n        if (isStreamingBody) {\n            collectedStream = await config.streamCollector(response.body);\n            response.body = createReadStreamOnBuffer(collectedStream);\n        }\n        await validateChecksumFromResponse(result.response, {\n            config,\n            responseAlgorithms,\n        });\n        if (isStreamingBody && collectedStream) {\n            response.body = createReadStreamOnBuffer(collectedStream);\n        }\n    }\n    return result;\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,wBAAwB,QAAQ,wCAAwC;AACjF,SAASC,4BAA4B,QAAQ,gCAAgC;AAC7E,OAAO,MAAMC,0CAA0C,GAAG;EACtDC,IAAI,EAAE,qCAAqC;EAC3CC,YAAY,EAAE,wBAAwB;EACtCC,QAAQ,EAAE,OAAO;EACjBC,IAAI,EAAE,CAAC,eAAe,CAAC;EACvBC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,mCAAmC,GAAGA,CAACC,MAAM,EAAEC,gBAAgB,KAAMC,IAAI,IAAK,MAAOC,IAAI,IAAK;EACvG,IAAI,CAACd,WAAW,CAACe,UAAU,CAACD,IAAI,CAACE,OAAO,CAAC,EAAE;IACvC,OAAOH,IAAI,CAACC,IAAI,CAAC;EACrB;EACA,MAAMG,KAAK,GAAGH,IAAI,CAACG,KAAK;EACxB,MAAMC,MAAM,GAAG,MAAML,IAAI,CAACC,IAAI,CAAC;EAC/B,MAAMK,QAAQ,GAAGD,MAAM,CAACC,QAAQ;EAChC,IAAIC,eAAe,GAAGC,SAAS;EAC/B,MAAM;IAAEC,2BAA2B;IAAEC;EAAmB,CAAC,GAAGX,gBAAgB;EAC5E,IAAIU,2BAA2B,IAAIL,KAAK,CAACK,2BAA2B,CAAC,KAAK,SAAS,EAAE;IACjF,MAAME,eAAe,GAAGvB,WAAW,CAACkB,QAAQ,CAACM,IAAI,CAAC;IAClD,IAAID,eAAe,EAAE;MACjBJ,eAAe,GAAG,MAAMT,MAAM,CAACe,eAAe,CAACP,QAAQ,CAACM,IAAI,CAAC;MAC7DN,QAAQ,CAACM,IAAI,GAAGvB,wBAAwB,CAACkB,eAAe,CAAC;IAC7D;IACA,MAAMjB,4BAA4B,CAACe,MAAM,CAACC,QAAQ,EAAE;MAChDR,MAAM;MACNY;IACJ,CAAC,CAAC;IACF,IAAIC,eAAe,IAAIJ,eAAe,EAAE;MACpCD,QAAQ,CAACM,IAAI,GAAGvB,wBAAwB,CAACkB,eAAe,CAAC;IAC7D;EACJ;EACA,OAAOF,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}