{"ast":null,"code":"import { HttpRequest } from \"@smithy/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n  return next => async args => {\n    const {\n      request\n    } = args;\n    if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n      request.headers = {\n        ...request.headers,\n        Expect: \"100-continue\"\n      };\n    }\n    return next({\n      ...args,\n      request\n    });\n  };\n}\nexport const addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\",\n  override: true\n};\nexport const getAddExpectContinuePlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["HttpRequest","addExpectContinueMiddleware","options","next","args","request","isInstance","body","runtime","headers","Expect","addExpectContinueMiddlewareOptions","step","tags","name","override","getAddExpectContinuePlugin","applyToStack","clientStack","add"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n    return (next) => async (args) => {\n        const { request } = args;\n        if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = {\n                ...request.headers,\n                Expect: \"100-continue\",\n            };\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nexport const getAddExpectContinuePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,OAAO,SAASC,2BAA2BA,CAACC,OAAO,EAAE;EACjD,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,MAAM;MAAEC;IAAQ,CAAC,GAAGD,IAAI;IACxB,IAAIJ,WAAW,CAACM,UAAU,CAACD,OAAO,CAAC,IAAIA,OAAO,CAACE,IAAI,IAAIL,OAAO,CAACM,OAAO,KAAK,MAAM,EAAE;MAC/EH,OAAO,CAACI,OAAO,GAAG;QACd,GAAGJ,OAAO,CAACI,OAAO;QAClBC,MAAM,EAAE;MACZ,CAAC;IACL;IACA,OAAOP,IAAI,CAAC;MACR,GAAGC,IAAI;MACPC;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AACA,OAAO,MAAMM,kCAAkC,GAAG;EAC9CC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,CAAC,mBAAmB,EAAE,eAAe,CAAC;EAC5CC,IAAI,EAAE,6BAA6B;EACnCC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,0BAA0B,GAAId,OAAO,KAAM;EACpDe,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAClB,2BAA2B,CAACC,OAAO,CAAC,EAAES,kCAAkC,CAAC;EAC7F;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}