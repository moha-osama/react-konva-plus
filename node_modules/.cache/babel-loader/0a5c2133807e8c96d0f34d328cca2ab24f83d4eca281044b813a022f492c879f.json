{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\00-Mogul\\\\konva v2\\\\src\\\\pages\\\\Preview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Video from \"../components/Video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = () => {\n  _s();\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const containerWidth = containerRef.current.offsetWidth;\n    setDimensions({\n      width: containerWidth,\n      height: 600\n    });\n  }, []);\n  const [rectangles, setRectangles] = useState([]);\n  const [video, setVideo] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/shapes\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      const videoUrl = data[0].downloadUrl;\n      const shapes = data[0].rectangles;\n      setRectangles(shapes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layer, {\n        children: rectangles.map((rect, index) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height,\n          fill: rect.fill\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Preview, \"r+O5B0iz1ux3mS42Dyg2CKc8igs=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Rect","Text","Image","Video","jsxDEV","_jsxDEV","Preview","_s","dimensions","setDimensions","width","height","containerWidth","containerRef","current","offsetWidth","rectangles","setRectangles","video","setVideo","fetch","method","headers","then","res","json","data","videoUrl","downloadUrl","shapes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rect","index","x","y","fill","_c","$RefreshReg$"],"sources":["D:/Work/00-Mogul/konva v2/src/pages/Preview.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\r\nimport Video from \"../components/Video\";\r\n\r\nconst Preview = () => {\r\n  const [dimensions, setDimensions] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const containerWidth = containerRef.current.offsetWidth;\r\n\r\n    setDimensions({\r\n      width: containerWidth,\r\n      height: 600,\r\n    });\r\n  }, []);\r\n\r\n  const [rectangles, setRectangles] = useState([]);\r\n  const [video, setVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/shapes\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const videoUrl = data[0].downloadUrl;\r\n        const shapes = data[0].rectangles;\r\n        setRectangles(shapes);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview\">\r\n      <Stage>\r\n        <Video />\r\n        <Layer>\r\n          {rectangles.map((rect, index) => (\r\n            <Rect\r\n              key={index}\r\n              x={rect.x}\r\n              y={rect.y}\r\n              width={rect.width}\r\n              height={rect.height}\r\n              fill={rect.fill}\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,aAAa;AAC7D,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC;IAC3Ce,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACd,MAAMe,cAAc,GAAGC,YAAY,CAACC,OAAO,CAACC,WAAW;IAEvDN,aAAa,CAAC;MACZC,KAAK,EAAEE,cAAc;MACrBD,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExCE,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW;MACpC,MAAMC,MAAM,GAAGH,IAAI,CAAC,CAAC,CAAC,CAACV,UAAU;MACjCC,aAAa,CAACY,MAAM,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtB1B,OAAA,CAACP,KAAK;MAAAiC,QAAA,gBACJ1B,OAAA,CAACF,KAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT9B,OAAA,CAACN,KAAK;QAAAgC,QAAA,EACHf,UAAU,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BjC,OAAA,CAACL,IAAI;UAEHuC,CAAC,EAAEF,IAAI,CAACE,CAAE;UACVC,CAAC,EAAEH,IAAI,CAACG,CAAE;UACV9B,KAAK,EAAE2B,IAAI,CAAC3B,KAAM;UAClBC,MAAM,EAAE0B,IAAI,CAAC1B,MAAO;UACpB8B,IAAI,EAAEJ,IAAI,CAACI;QAAK,GALXH,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlDID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}