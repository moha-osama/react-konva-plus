{"ast":null,"code":"import packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@smithy/hash-blob-browser\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { Md5 } from \"@smithy/md5-js\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    md5: config?.md5 ?? Md5,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha1: config?.sha1 ?? Sha1,\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    streamHasher: config?.streamHasher ?? streamHasher,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))\n  };\n};","map":{"version":3,"names":["packageInfo","Sha1","Sha256","defaultUserAgent","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","eventStreamSerdeProvider","FetchHttpHandler","RequestHandler","streamCollector","blobHasher","streamHasher","invalidProvider","Md5","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","defaultsMode","defaultConfigProvider","then","clientSharedValues","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","md5","region","requestHandler","retryMode","sha1","sha256","useDualstackEndpoint","resolve","useFipsEndpoint"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@smithy/hash-blob-browser\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { Md5 } from \"@smithy/md5-js\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        md5: config?.md5 ?? Md5,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha1: config?.sha1 ?? Sha1,\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        streamHasher: config?.streamHasher ?? streamHasher,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,8BAA8B,EAAEC,yBAAyB,QAAQ,yBAAyB;AACnG,SAASC,wBAAwB,QAAQ,mCAAmC;AAC5E,SAASC,gBAAgB,IAAIC,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AAChG,SAASC,UAAU,IAAIC,YAAY,QAAQ,2BAA2B;AACtE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC7E,SAASC,gBAAgB,IAAIC,sBAAsB,QAAQ,wBAAwB;AACnF,SAASC,yBAAyB,QAAQ,uBAAuB;AACjE,SAASC,yBAAyB,QAAQ,oCAAoC;AAC9E,OAAO,MAAMH,gBAAgB,GAAII,MAAM,IAAK;EACxC,MAAMC,YAAY,GAAGF,yBAAyB,CAACC,MAAM,CAAC;EACtD,MAAME,qBAAqB,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAAC,CAACE,IAAI,CAACL,yBAAyB,CAAC;EAClF,MAAMM,kBAAkB,GAAGP,sBAAsB,CAACG,MAAM,CAAC;EACzD,OAAO;IACH,GAAGI,kBAAkB;IACrB,GAAGJ,MAAM;IACTK,OAAO,EAAE,SAAS;IAClBJ,YAAY;IACZK,iBAAiB,EAAEN,MAAM,EAAEM,iBAAiB,IAAIb,mBAAmB;IACnEc,yBAAyB,EAAEP,MAAM,EAAEO,yBAAyB,KAAMC,CAAC,IAAK,MAAMC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACjIC,wBAAwB,EAAEZ,MAAM,EAAEY,wBAAwB,IACtD9B,gBAAgB,CAAC;MAAE+B,SAAS,EAAET,kBAAkB,CAACS,SAAS;MAAEC,aAAa,EAAEnC,WAAW,CAACoC;IAAQ,CAAC,CAAC;IACrG9B,wBAAwB,EAAEe,MAAM,EAAEf,wBAAwB,IAAIA,wBAAwB;IACtF+B,WAAW,EAAEhB,MAAM,EAAEgB,WAAW,IAAItB,oBAAoB;IACxDuB,GAAG,EAAEjB,MAAM,EAAEiB,GAAG,IAAIzB,GAAG;IACvB0B,MAAM,EAAElB,MAAM,EAAEkB,MAAM,IAAI3B,eAAe,CAAC,mBAAmB,CAAC;IAC9D4B,cAAc,EAAEnB,MAAM,EAAEmB,cAAc,IAAI,IAAIhC,cAAc,CAACe,qBAAqB,CAAC;IACnFkB,SAAS,EAAEpB,MAAM,EAAEoB,SAAS,KAAK,YAAY,CAAC,MAAMlB,qBAAqB,CAAC,CAAC,EAAEkB,SAAS,IAAIzB,kBAAkB,CAAC;IAC7G0B,IAAI,EAAErB,MAAM,EAAEqB,IAAI,IAAIzC,IAAI;IAC1B0C,MAAM,EAAEtB,MAAM,EAAEsB,MAAM,IAAIzC,MAAM;IAChCO,eAAe,EAAEY,MAAM,EAAEZ,eAAe,IAAIA,eAAe;IAC3DE,YAAY,EAAEU,MAAM,EAAEV,YAAY,IAAIA,YAAY;IAClDiC,oBAAoB,EAAEvB,MAAM,EAAEuB,oBAAoB,KAAK,MAAMd,OAAO,CAACe,OAAO,CAACzC,8BAA8B,CAAC,CAAC;IAC7G0C,eAAe,EAAEzB,MAAM,EAAEyB,eAAe,KAAK,MAAMhB,OAAO,CAACe,OAAO,CAACxC,yBAAyB,CAAC;EACjG,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}