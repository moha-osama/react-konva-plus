{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\00-Mogul\\\\konva v2\\\\src\\\\pages\\\\Preview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Video from \"../components/Video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = () => {\n  _s();\n  const containerRef = useRef();\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const containerWidth = containerRef.current.offsetWidth;\n    setDimensions({\n      width: containerWidth,\n      height: 600\n    });\n  }, []);\n  const [rectangles, setRectangles] = useState([]);\n  const [video, setVideo] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/shapes\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      const shapes = data[0].rectangles;\n      setRectangles(shapes);\n      const videoUrl = data[0].downloadUrl;\n      setVideo(videoUrl);\n      //download from this link\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview\",\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: video,\n      className: \"video-player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Preview, \"aRwXP8AE4C316GuX5FjOSlWfeAk=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Rect","Text","Image","Video","jsxDEV","_jsxDEV","Preview","_s","containerRef","dimensions","setDimensions","width","height","containerWidth","current","offsetWidth","rectangles","setRectangles","video","setVideo","fetch","method","headers","then","res","json","data","shapes","videoUrl","downloadUrl","className","ref","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Work/00-Mogul/konva v2/src/pages/Preview.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\r\nimport Video from \"../components/Video\";\r\n\r\nconst Preview = () => {\r\n  const containerRef = useRef();\r\n  const [dimensions, setDimensions] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const containerWidth = containerRef.current.offsetWidth;\r\n\r\n    setDimensions({\r\n      width: containerWidth,\r\n      height: 600,\r\n    });\r\n  }, []);\r\n\r\n  const [rectangles, setRectangles] = useState([]);\r\n  const [video, setVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/shapes\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const shapes = data[0].rectangles;\r\n        setRectangles(shapes);\r\n        const videoUrl = data[0].downloadUrl;\r\n        setVideo(videoUrl);\r\n        //download from this link\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview\" ref={containerRef}>\r\n      <source src={video} className=\"video-player\" />\r\n      {/* <Stage\r\n        width={dimensions.width}\r\n        height={dimensions.height}\r\n        className=\"canvas\"\r\n      >\r\n        <Video containerRef={containerRef} />\r\n        <Layer>\r\n          {rectangles.map((rect, index) => (\r\n            <Rect\r\n              key={index}\r\n              x={rect.x}\r\n              y={rect.y}\r\n              width={rect.width}\r\n              height={rect.height}\r\n              fill={rect.fill}\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,aAAa;AAC7D,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAGZ,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAC3CgB,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAGL,YAAY,CAACM,OAAO,CAACC,WAAW;IAEvDL,aAAa,CAAC;MACZC,KAAK,EAAEE,cAAc;MACrBD,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExCE,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,MAAM,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACV,UAAU;MACjCC,aAAa,CAACU,MAAM,CAAC;MACrB,MAAMC,QAAQ,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW;MACpCV,QAAQ,CAACS,QAAQ,CAAC;MAClB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAACC,GAAG,EAAEvB,YAAa;IAAAwB,QAAA,eACzC3B,OAAA;MAAQ4B,GAAG,EAAEf,KAAM;MAACY,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoB5C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1DID,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AA4Db,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}