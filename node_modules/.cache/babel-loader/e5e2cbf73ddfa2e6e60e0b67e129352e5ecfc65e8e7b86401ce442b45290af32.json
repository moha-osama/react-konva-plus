{"ast":null,"code":"// $_SESSION['s3']['albumBucketName'] = \"mogulvideo\";\n// $_SESSION['s3']['bucketRegion'] = \"us-west-2\";\n// $_SESSION['s3']['IdentityPoolId'] = \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\";\n\nimport { async } from \"@firebase/util\";\nimport { Amplify, Auth, Storage } from \"aws-amplify\";\nimport { v4 } from \"uuid\";\nexport const upload = file => {\n  Amplify.configure({\n    Auth: {\n      identityPoolId: \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\",\n      //REQUIRED - Amazon Cognito Identity Pool ID\n      region: \"us-west-2\" // REQUIRED - Amazon Cognito Region\n    },\n\n    Storage: {\n      AWSS3: {\n        bucket: \"mogulvideo\",\n        //REQUIRED -  Amazon S3 bucket name\n        region: \"us-west-2\" //OPTIONAL -  Amazon service region\n      }\n    }\n  });\n  //\n\n  Storage.put(`S3/mogulvideo/${v4()}/${file.name}`, file, {\n    progressCallback(progress) {\n      console.log(`Uploaded: ${progress.loaded}/${progress.total}`);\n    }\n  }).then(res => console.log(res)).catch(err => console.log(err));\n};\n\n//config\n// : {\n//   level?: private | protected | public, // defaults to `public`\n//   identityId?: string, // id of another user, if `level: protected`\n//   download?: boolean, // defaults to false\n//   expires?: number, // validity of the URL, in seconds. defaults to 900 (15 minutes) and maxes at 3600 (1 hour)\n//   contentType?: string, // set return content type, eg \"text/html\"\n//   validateObjectExistence?: boolean, // defaults to false\n//   cacheControl?: string, // Specifies caching behavior along the request/reply chain\n// }\nexport const stream = async () => {\n  await Storage.get(key, config);\n};","map":{"version":3,"names":["async","Amplify","Auth","Storage","v4","upload","file","configure","identityPoolId","region","AWSS3","bucket","put","name","progressCallback","progress","console","log","loaded","total","then","res","catch","err","stream","get","key","config"],"sources":["D:/Work/00-Mogul/konva v2/src/utils/index.js"],"sourcesContent":["// $_SESSION['s3']['albumBucketName'] = \"mogulvideo\";\r\n// $_SESSION['s3']['bucketRegion'] = \"us-west-2\";\r\n// $_SESSION['s3']['IdentityPoolId'] = \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\";\r\n\r\nimport { async } from \"@firebase/util\";\r\nimport { Amplify, Auth, Storage } from \"aws-amplify\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const upload = (file) => {\r\n  Amplify.configure({\r\n    Auth: {\r\n      identityPoolId: \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\", //REQUIRED - Amazon Cognito Identity Pool ID\r\n      region: \"us-west-2\", // REQUIRED - Amazon Cognito Region\r\n    },\r\n    Storage: {\r\n      AWSS3: {\r\n        bucket: \"mogulvideo\", //REQUIRED -  Amazon S3 bucket name\r\n        region: \"us-west-2\", //OPTIONAL -  Amazon service region\r\n      },\r\n    },\r\n  });\r\n  //\r\n\r\n  Storage.put(`S3/mogulvideo/${v4()}/${file.name}`, file, {\r\n    progressCallback(progress) {\r\n      console.log(`Uploaded: ${progress.loaded}/${progress.total}`);\r\n    },\r\n  })\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//config\r\n// : {\r\n//   level?: private | protected | public, // defaults to `public`\r\n//   identityId?: string, // id of another user, if `level: protected`\r\n//   download?: boolean, // defaults to false\r\n//   expires?: number, // validity of the URL, in seconds. defaults to 900 (15 minutes) and maxes at 3600 (1 hour)\r\n//   contentType?: string, // set return content type, eg \"text/html\"\r\n//   validateObjectExistence?: boolean, // defaults to false\r\n//   cacheControl?: string, // Specifies caching behavior along the request/reply chain\r\n// }\r\nexport const stream = async () => {\r\n  await Storage.get(key, config);\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAQ,aAAa;AACpD,SAASC,EAAE,QAAQ,MAAM;AAEzB,OAAO,MAAMC,MAAM,GAAIC,IAAI,IAAK;EAC9BL,OAAO,CAACM,SAAS,CAAC;IAChBL,IAAI,EAAE;MACJM,cAAc,EAAE,gDAAgD;MAAE;MAClEC,MAAM,EAAE,WAAW,CAAE;IACvB,CAAC;;IACDN,OAAO,EAAE;MACPO,KAAK,EAAE;QACLC,MAAM,EAAE,YAAY;QAAE;QACtBF,MAAM,EAAE,WAAW,CAAE;MACvB;IACF;EACF,CAAC,CAAC;EACF;;EAEAN,OAAO,CAACS,GAAG,CAAE,iBAAgBR,EAAE,CAAC,CAAE,IAAGE,IAAI,CAACO,IAAK,EAAC,EAAEP,IAAI,EAAE;IACtDQ,gBAAgBA,CAACC,QAAQ,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAE,aAAYF,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,KAAM,EAAC,CAAC;IAC/D;EACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMrB,OAAO,CAACsB,GAAG,CAACC,GAAG,EAAEC,MAAM,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}