{"ast":null,"code":"import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({\n  fn,\n  argv\n}, options) => {\n  const evaluatedArgs = argv.map(arg => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n  return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};","map":{"version":3,"names":["lib","evaluateExpression","callFunction","fn","argv","options","evaluatedArgs","map","arg","includes","split","reduce","acc","key"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js"],"sourcesContent":["import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,EAAEC,OAAO,KAAK;EACnD,MAAMC,aAAa,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAOD,GAAG,CAAC,GAAGA,GAAG,GAAGP,kBAAkB,CAACO,GAAG,EAAE,KAAK,EAAEH,OAAO,CAAC,CAAC;EACnI,OAAOF,EAAE,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,CAACC,GAAG,CAAC,EAAEb,GAAG,CAAC,CAAC,GAAGM,aAAa,CAAC;AAC9E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}