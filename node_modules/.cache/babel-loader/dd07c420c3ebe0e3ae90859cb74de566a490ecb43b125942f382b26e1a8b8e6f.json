{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\00-Mogul\\\\konva v2\\\\src\\\\components\\\\TextElements.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextElements = () => {\n  _s();\n  const [textElements, setTextElements] = useState([]);\n  const [selectedText, setSelectedText] = useState(null);\n  const handleCanvasClick = e => {\n    // Check if the click is on a text element, if yes, enable editing\n    const clickedText = e.target;\n    if (clickedText instanceof window.Konva.Text) {\n      setSelectedText(clickedText);\n    } else {\n      // Otherwise, create a new text element\n      const newText = /*#__PURE__*/_jsxDEV(Text, {\n        x: e.evt.clientX - e.target.getStage().container().getBoundingClientRect().left,\n        y: e.evt.clientY - e.target.getStage().container().getBoundingClientRect().top,\n        text: \"Click to edit\",\n        draggable: true,\n        onClick: () => setSelectedText(newText),\n        onTransform: () => setSelectedText(newText),\n        onTap: () => setSelectedText(newText)\n      }, textElements.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n      setTextElements([...textElements, newText]);\n    }\n  };\n  const handleTextChange = e => {\n    // Update the text content when editing\n    const newText = selectedText.clone({\n      text: e.target.value\n    });\n    const updatedTextElements = textElements.map(element => {\n      return element.key === selectedText.key ? newText : element;\n    });\n    setTextElements(updatedTextElements);\n  };\n  return /*#__PURE__*/_jsxDEV(Layer, {\n    children: textElements.map(textElement => textElement)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(TextElements, \"0a0tiqZjYCBJVh7rrFL+rX0qRiI=\");\n_c = TextElements;\nexport default TextElements;\nvar _c;\n$RefreshReg$(_c, \"TextElements\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Rect","Text","Image","jsxDEV","_jsxDEV","TextElements","_s","textElements","setTextElements","selectedText","setSelectedText","handleCanvasClick","e","clickedText","target","window","Konva","newText","x","evt","clientX","getStage","container","getBoundingClientRect","left","y","clientY","top","text","draggable","onClick","onTransform","onTap","length","fileName","_jsxFileName","lineNumber","columnNumber","handleTextChange","clone","value","updatedTextElements","map","element","key","children","textElement","_c","$RefreshReg$"],"sources":["D:/Work/00-Mogul/konva v2/src/components/TextElements.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\r\n\r\nconst TextElements = () => {\r\n  const [textElements, setTextElements] = useState([]);\r\n  const [selectedText, setSelectedText] = useState(null);\r\n\r\n  const handleCanvasClick = (e) => {\r\n    // Check if the click is on a text element, if yes, enable editing\r\n    const clickedText = e.target;\r\n    if (clickedText instanceof window.Konva.Text) {\r\n      setSelectedText(clickedText);\r\n    } else {\r\n      // Otherwise, create a new text element\r\n      const newText = (\r\n        <Text\r\n          key={textElements.length}\r\n          x={\r\n            e.evt.clientX -\r\n            e.target.getStage().container().getBoundingClientRect().left\r\n          }\r\n          y={\r\n            e.evt.clientY -\r\n            e.target.getStage().container().getBoundingClientRect().top\r\n          }\r\n          text=\"Click to edit\"\r\n          draggable\r\n          onClick={() => setSelectedText(newText)}\r\n          onTransform={() => setSelectedText(newText)}\r\n          onTap={() => setSelectedText(newText)}\r\n        />\r\n      );\r\n      setTextElements([...textElements, newText]);\r\n    }\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    // Update the text content when editing\r\n    const newText = selectedText.clone({ text: e.target.value });\r\n    const updatedTextElements = textElements.map((element) => {\r\n      return element.key === selectedText.key ? newText : element;\r\n    });\r\n    setTextElements(updatedTextElements);\r\n  };\r\n\r\n  return <Layer>{textElements.map((textElement) => textElement)}</Layer>;\r\n};\r\n\r\nexport default TextElements;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMgB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM;IAC5B,IAAID,WAAW,YAAYE,MAAM,CAACC,KAAK,CAACf,IAAI,EAAE;MAC5CS,eAAe,CAACG,WAAW,CAAC;IAC9B,CAAC,MAAM;MACL;MACA,MAAMI,OAAO,gBACXb,OAAA,CAACH,IAAI;QAEHiB,CAAC,EACCN,CAAC,CAACO,GAAG,CAACC,OAAO,GACbR,CAAC,CAACE,MAAM,CAACO,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAACC,IACzD;QACDC,CAAC,EACCb,CAAC,CAACO,GAAG,CAACO,OAAO,GACbd,CAAC,CAACE,MAAM,CAACO,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAACI,GACzD;QACDC,IAAI,EAAC,eAAe;QACpBC,SAAS;QACTC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACO,OAAO,CAAE;QACxCc,WAAW,EAAEA,CAAA,KAAMrB,eAAe,CAACO,OAAO,CAAE;QAC5Ce,KAAK,EAAEA,CAAA,KAAMtB,eAAe,CAACO,OAAO;MAAE,GAbjCV,YAAY,CAAC0B,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAczB,CACF;MACD7B,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEU,OAAO,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMqB,gBAAgB,GAAI1B,CAAC,IAAK;IAC9B;IACA,MAAMK,OAAO,GAAGR,YAAY,CAAC8B,KAAK,CAAC;MAAEX,IAAI,EAAEhB,CAAC,CAACE,MAAM,CAAC0B;IAAM,CAAC,CAAC;IAC5D,MAAMC,mBAAmB,GAAGlC,YAAY,CAACmC,GAAG,CAAEC,OAAO,IAAK;MACxD,OAAOA,OAAO,CAACC,GAAG,KAAKnC,YAAY,CAACmC,GAAG,GAAG3B,OAAO,GAAG0B,OAAO;IAC7D,CAAC,CAAC;IACFnC,eAAe,CAACiC,mBAAmB,CAAC;EACtC,CAAC;EAED,oBAAOrC,OAAA,CAACL,KAAK;IAAA8C,QAAA,EAAEtC,YAAY,CAACmC,GAAG,CAAEI,WAAW,IAAKA,WAAW;EAAC;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACxE,CAAC;AAAC/B,EAAA,CA3CID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}