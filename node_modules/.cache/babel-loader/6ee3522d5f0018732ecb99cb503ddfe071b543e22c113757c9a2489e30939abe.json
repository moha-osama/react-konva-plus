{"ast":null,"code":"import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { GetObjectOutputFilterSensitiveLog, GetObjectRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { de_GetObjectCommand, se_GetObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class GetObjectCommand extends $Command {\n  static getEndpointParameterInstructions() {\n    return {\n      Bucket: {\n        type: \"contextParams\",\n        name: \"Bucket\"\n      },\n      ForcePathStyle: {\n        type: \"clientContextParams\",\n        name: \"forcePathStyle\"\n      },\n      UseArnRegion: {\n        type: \"clientContextParams\",\n        name: \"useArnRegion\"\n      },\n      DisableMultiRegionAccessPoints: {\n        type: \"clientContextParams\",\n        name: \"disableMultiregionAccessPoints\"\n      },\n      Accelerate: {\n        type: \"clientContextParams\",\n        name: \"useAccelerateEndpoint\"\n      },\n      UseGlobalEndpoint: {\n        type: \"builtInParams\",\n        name: \"useGlobalEndpoint\"\n      },\n      UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n      },\n      Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n      },\n      Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n      },\n      UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n      }\n    };\n  }\n  constructor(input) {\n    super();\n    this.input = input;\n  }\n  resolveMiddleware(clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getEndpointPlugin(configuration, GetObjectCommand.getEndpointParameterInstructions()));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getFlexibleChecksumsPlugin(configuration, {\n      input: this.input,\n      requestChecksumRequired: false,\n      requestValidationModeMember: \"ChecksumMode\",\n      responseAlgorithms: [\"CRC32\", \"CRC32C\", \"SHA256\", \"SHA1\"]\n    }));\n    const stack = clientStack.concat(this.middlewareStack);\n    const {\n      logger\n    } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetObjectCommand\";\n    const handlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetObjectRequestFilterSensitiveLog,\n      outputFilterSensitiveLog: GetObjectOutputFilterSensitiveLog\n    };\n    const {\n      requestHandler\n    } = configuration;\n    return stack.resolve(request => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n  }\n  serialize(input, context) {\n    return se_GetObjectCommand(input, context);\n  }\n  deserialize(output, context) {\n    return de_GetObjectCommand(output, context);\n  }\n}","map":{"version":3,"names":["getFlexibleChecksumsPlugin","getSsecPlugin","getEndpointPlugin","getSerdePlugin","Command","$Command","GetObjectOutputFilterSensitiveLog","GetObjectRequestFilterSensitiveLog","de_GetObjectCommand","se_GetObjectCommand","GetObjectCommand","getEndpointParameterInstructions","Bucket","type","name","ForcePathStyle","UseArnRegion","DisableMultiRegionAccessPoints","Accelerate","UseGlobalEndpoint","UseFIPS","Endpoint","Region","UseDualStack","constructor","input","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","requestChecksumRequired","requestValidationModeMember","responseAlgorithms","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/client-s3/dist-es/commands/GetObjectCommand.js"],"sourcesContent":["import { getFlexibleChecksumsPlugin } from \"@aws-sdk/middleware-flexible-checksums\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { GetObjectOutputFilterSensitiveLog, GetObjectRequestFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetObjectCommand, se_GetObjectCommand } from \"../protocols/Aws_restXml\";\nexport { $Command };\nexport class GetObjectCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getSsecPlugin(configuration));\n        this.middlewareStack.use(getFlexibleChecksumsPlugin(configuration, {\n            input: this.input,\n            requestChecksumRequired: false,\n            requestValidationModeMember: \"ChecksumMode\",\n            responseAlgorithms: [\"CRC32\", \"CRC32C\", \"SHA256\", \"SHA1\"],\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_GetObjectCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_GetObjectCommand(output, context);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}