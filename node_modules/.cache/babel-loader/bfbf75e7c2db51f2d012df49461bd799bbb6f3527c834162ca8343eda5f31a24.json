{"ast":null,"code":"import { Buffer } from \"buffer\";\nexport async function* getChunkStream(data, partSize, getNextData) {\n  let partNumber = 1;\n  const currentBuffer = {\n    chunks: [],\n    length: 0\n  };\n  for await (const datum of getNextData(data)) {\n    currentBuffer.chunks.push(datum);\n    currentBuffer.length += datum.length;\n    while (currentBuffer.length >= partSize) {\n      const dataChunk = currentBuffer.chunks.length > 1 ? Buffer.concat(currentBuffer.chunks) : currentBuffer.chunks[0];\n      yield {\n        partNumber,\n        data: dataChunk.slice(0, partSize)\n      };\n      currentBuffer.chunks = [dataChunk.slice(partSize)];\n      currentBuffer.length = currentBuffer.chunks[0].length;\n      partNumber += 1;\n    }\n  }\n  yield {\n    partNumber,\n    data: Buffer.concat(currentBuffer.chunks),\n    lastPart: true\n  };\n}","map":{"version":3,"names":["Buffer","getChunkStream","data","partSize","getNextData","partNumber","currentBuffer","chunks","length","datum","push","dataChunk","concat","slice","lastPart"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/lib-storage/dist-es/chunks/getChunkStream.js"],"sourcesContent":["import { Buffer } from \"buffer\";\nexport async function* getChunkStream(data, partSize, getNextData) {\n    let partNumber = 1;\n    const currentBuffer = { chunks: [], length: 0 };\n    for await (const datum of getNextData(data)) {\n        currentBuffer.chunks.push(datum);\n        currentBuffer.length += datum.length;\n        while (currentBuffer.length >= partSize) {\n            const dataChunk = currentBuffer.chunks.length > 1 ? Buffer.concat(currentBuffer.chunks) : currentBuffer.chunks[0];\n            yield {\n                partNumber,\n                data: dataChunk.slice(0, partSize),\n            };\n            currentBuffer.chunks = [dataChunk.slice(partSize)];\n            currentBuffer.length = currentBuffer.chunks[0].length;\n            partNumber += 1;\n        }\n    }\n    yield {\n        partNumber,\n        data: Buffer.concat(currentBuffer.chunks),\n        lastPart: true,\n    };\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAO,gBAAgBC,cAAcA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EAC/D,IAAIC,UAAU,GAAG,CAAC;EAClB,MAAMC,aAAa,GAAG;IAAEC,MAAM,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC;EAC/C,WAAW,MAAMC,KAAK,IAAIL,WAAW,CAACF,IAAI,CAAC,EAAE;IACzCI,aAAa,CAACC,MAAM,CAACG,IAAI,CAACD,KAAK,CAAC;IAChCH,aAAa,CAACE,MAAM,IAAIC,KAAK,CAACD,MAAM;IACpC,OAAOF,aAAa,CAACE,MAAM,IAAIL,QAAQ,EAAE;MACrC,MAAMQ,SAAS,GAAGL,aAAa,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGR,MAAM,CAACY,MAAM,CAACN,aAAa,CAACC,MAAM,CAAC,GAAGD,aAAa,CAACC,MAAM,CAAC,CAAC,CAAC;MACjH,MAAM;QACFF,UAAU;QACVH,IAAI,EAAES,SAAS,CAACE,KAAK,CAAC,CAAC,EAAEV,QAAQ;MACrC,CAAC;MACDG,aAAa,CAACC,MAAM,GAAG,CAACI,SAAS,CAACE,KAAK,CAACV,QAAQ,CAAC,CAAC;MAClDG,aAAa,CAACE,MAAM,GAAGF,aAAa,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,MAAM;MACrDH,UAAU,IAAI,CAAC;IACnB;EACJ;EACA,MAAM;IACFA,UAAU;IACVH,IAAI,EAAEF,MAAM,CAACY,MAAM,CAACN,aAAa,CAACC,MAAM,CAAC;IACzCO,QAAQ,EAAE;EACd,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}