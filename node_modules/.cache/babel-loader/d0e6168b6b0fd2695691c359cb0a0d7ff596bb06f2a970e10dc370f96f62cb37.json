{"ast":null,"code":"import { ListObjectsV2Command } from \"../commands/ListObjectsV2Command\";\nimport { S3Client } from \"../S3Client\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n  return await client.send(new ListObjectsV2Command(input), ...args);\n};\nexport async function* paginateListObjectsV2(config, input, ...additionalArguments) {\n  let token = config.startingToken || undefined;\n  let hasNext = true;\n  let page;\n  while (hasNext) {\n    input.ContinuationToken = token;\n    input[\"MaxKeys\"] = config.pageSize;\n    if (config.client instanceof S3Client) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected S3 | S3Client\");\n    }\n    yield page;\n    const prevToken = token;\n    token = page.NextContinuationToken;\n    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n  }\n  return undefined;\n}","map":{"version":3,"names":["ListObjectsV2Command","S3Client","makePagedClientRequest","client","input","args","send","paginateListObjectsV2","config","additionalArguments","token","startingToken","undefined","hasNext","page","ContinuationToken","pageSize","Error","prevToken","NextContinuationToken","stopOnSameToken"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/client-s3/dist-es/pagination/ListObjectsV2Paginator.js"],"sourcesContent":["import { ListObjectsV2Command, } from \"../commands/ListObjectsV2Command\";\nimport { S3Client } from \"../S3Client\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListObjectsV2Command(input), ...args);\n};\nexport async function* paginateListObjectsV2(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.ContinuationToken = token;\n        input[\"MaxKeys\"] = config.pageSize;\n        if (config.client instanceof S3Client) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected S3 | S3Client\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextContinuationToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAS,kCAAkC;AACxE,SAASC,QAAQ,QAAQ,aAAa;AACtC,MAAMC,sBAAsB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAI,KAAK;EAC7D,OAAO,MAAMF,MAAM,CAACG,IAAI,CAAC,IAAIN,oBAAoB,CAACI,KAAK,CAAC,EAAE,GAAGC,IAAI,CAAC;AACtE,CAAC;AACD,OAAO,gBAAgBE,qBAAqBA,CAACC,MAAM,EAAEJ,KAAK,EAAE,GAAGK,mBAAmB,EAAE;EAChF,IAAIC,KAAK,GAAGF,MAAM,CAACG,aAAa,IAAIC,SAAS;EAC7C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,IAAI;EACR,OAAOD,OAAO,EAAE;IACZT,KAAK,CAACW,iBAAiB,GAAGL,KAAK;IAC/BN,KAAK,CAAC,SAAS,CAAC,GAAGI,MAAM,CAACQ,QAAQ;IAClC,IAAIR,MAAM,CAACL,MAAM,YAAYF,QAAQ,EAAE;MACnCa,IAAI,GAAG,MAAMZ,sBAAsB,CAACM,MAAM,CAACL,MAAM,EAAEC,KAAK,EAAE,GAAGK,mBAAmB,CAAC;IACrF,CAAC,MACI;MACD,MAAM,IAAIQ,KAAK,CAAC,wCAAwC,CAAC;IAC7D;IACA,MAAMH,IAAI;IACV,MAAMI,SAAS,GAAGR,KAAK;IACvBA,KAAK,GAAGI,IAAI,CAACK,qBAAqB;IAClCN,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACF,MAAM,CAACY,eAAe,IAAIV,KAAK,KAAKQ,SAAS,CAAC,CAAC;EAC3E;EACA,OAAON,SAAS;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}