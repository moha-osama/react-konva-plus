{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\00-Mogul\\\\konva v2\\\\src\\\\utils\\\\index.js\",\n  _s = $RefreshSig$();\n// $_SESSION['s3']['albumBucketName'] = \"mogulvideo\";\n// $_SESSION['s3']['bucketRegion'] = \"us-west-2\";\n// $_SESSION['s3']['IdentityPoolId'] = \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\";\n\nimport AWS from \"aws-sdk\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Create state to store file\n  const [file, setFile] = useState(null);\n\n  // Function to upload file to s3\n  const uploadFile = async () => {\n    // S3 Bucket Name\n    const S3_BUCKET = \"bucket-name\";\n\n    // S3 Region\n    const REGION = \"region\";\n\n    // S3 Credentials\n    AWS.config.update({\n      accessKeyId: \"youraccesskeyhere\",\n      secretAccessKey: \"yoursecretaccesskeyhere\"\n    });\n    const s3 = new AWS.S3({\n      params: {\n        Bucket: S3_BUCKET\n      },\n      region: REGION\n    });\n\n    // Files Parameters\n\n    const params = {\n      Bucket: S3_BUCKET,\n      Key: file.name,\n      Body: file\n    };\n\n    // Uploading file to s3\n\n    var upload = s3.putObject(params).on(\"httpUploadProgress\", evt => {\n      // File uploading progress\n      console.log(\"Uploading \" + parseInt(evt.loaded * 100 / evt.total) + \"%\");\n    }).promise();\n    await upload.then((err, data) => {\n      console.log(err);\n      // Fille successfully uploaded\n      alert(\"File uploaded successfully.\");\n    });\n  };\n  // Function to handle file and store it to file state\n  const handleFileChange = e => {\n    // Uploaded file\n    const file = e.target.files[0];\n    // Changing file state\n    setFile(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AWS","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","uploadFile","S3_BUCKET","REGION","config","update","accessKeyId","secretAccessKey","s3","S3","params","Bucket","region","Key","name","Body","upload","putObject","on","evt","console","log","parseInt","loaded","total","promise","then","err","data","alert","handleFileChange","e","target","files","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Work/00-Mogul/konva v2/src/utils/index.js"],"sourcesContent":["// $_SESSION['s3']['albumBucketName'] = \"mogulvideo\";\r\n// $_SESSION['s3']['bucketRegion'] = \"us-west-2\";\r\n// $_SESSION['s3']['IdentityPoolId'] = \"us-west-2:78aae9fb-21b1-428e-8b4e-86e5b21de9b2\";\r\n\r\nimport AWS from \"aws-sdk\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  // Create state to store file\r\n  const [file, setFile] = useState(null);\r\n\r\n  // Function to upload file to s3\r\n  const uploadFile = async () => {\r\n    // S3 Bucket Name\r\n    const S3_BUCKET = \"bucket-name\";\r\n\r\n    // S3 Region\r\n    const REGION = \"region\";\r\n\r\n    // S3 Credentials\r\n    AWS.config.update({\r\n      accessKeyId: \"youraccesskeyhere\",\r\n      secretAccessKey: \"yoursecretaccesskeyhere\",\r\n    });\r\n    const s3 = new AWS.S3({\r\n      params: { Bucket: S3_BUCKET },\r\n      region: REGION,\r\n    });\r\n\r\n    // Files Parameters\r\n\r\n    const params = {\r\n      Bucket: S3_BUCKET,\r\n      Key: file.name,\r\n      Body: file,\r\n    };\r\n\r\n    // Uploading file to s3\r\n\r\n    var upload = s3\r\n      .putObject(params)\r\n      .on(\"httpUploadProgress\", (evt) => {\r\n        // File uploading progress\r\n        console.log(\r\n          \"Uploading \" + parseInt((evt.loaded * 100) / evt.total) + \"%\"\r\n        );\r\n      })\r\n      .promise();\r\n\r\n    await upload.then((err, data) => {\r\n      console.log(err);\r\n      // Fille successfully uploaded\r\n      alert(\"File uploaded successfully.\");\r\n    });\r\n  };\r\n  // Function to handle file and store it to file state\r\n  const handleFileChange = (e) => {\r\n    // Uploaded file\r\n    const file = e.target.files[0];\r\n    // Changing file state\r\n    setFile(file);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={uploadFile}>Upload</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,SAAS;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,MAAMC,SAAS,GAAG,aAAa;;IAE/B;IACA,MAAMC,MAAM,GAAG,QAAQ;;IAEvB;IACAV,GAAG,CAACW,MAAM,CAACC,MAAM,CAAC;MAChBC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,MAAMC,EAAE,GAAG,IAAIf,GAAG,CAACgB,EAAE,CAAC;MACpBC,MAAM,EAAE;QAAEC,MAAM,EAAET;MAAU,CAAC;MAC7BU,MAAM,EAAET;IACV,CAAC,CAAC;;IAEF;;IAEA,MAAMO,MAAM,GAAG;MACbC,MAAM,EAAET,SAAS;MACjBW,GAAG,EAAEd,IAAI,CAACe,IAAI;MACdC,IAAI,EAAEhB;IACR,CAAC;;IAED;;IAEA,IAAIiB,MAAM,GAAGR,EAAE,CACZS,SAAS,CAACP,MAAM,CAAC,CACjBQ,EAAE,CAAC,oBAAoB,EAAGC,GAAG,IAAK;MACjC;MACAC,OAAO,CAACC,GAAG,CACT,YAAY,GAAGC,QAAQ,CAAEH,GAAG,CAACI,MAAM,GAAG,GAAG,GAAIJ,GAAG,CAACK,KAAK,CAAC,GAAG,GAC5D,CAAC;IACH,CAAC,CAAC,CACDC,OAAO,CAAC,CAAC;IAEZ,MAAMT,MAAM,CAACU,IAAI,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC/BR,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB;MACAE,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;EACD;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B;IACA,MAAMhC,IAAI,GAAGgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B;IACAjC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EACD,oBACEH,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvC,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAOwC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEP;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD7C,OAAA;QAAQ8C,OAAO,EAAEzC,UAAW;QAAAkC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3C,EAAA,CA/DQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}