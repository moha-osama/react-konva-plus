{"ast":null,"code":"export function ssecMiddleware(options) {\n  return next => async args => {\n    let input = {\n      ...args.input\n    };\n    const properties = [{\n      target: \"SSECustomerKey\",\n      hash: \"SSECustomerKeyMD5\"\n    }, {\n      target: \"CopySourceSSECustomerKey\",\n      hash: \"CopySourceSSECustomerKeyMD5\"\n    }];\n    for (const prop of properties) {\n      const value = input[prop.target];\n      if (value) {\n        const valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === \"string\" ? options.utf8Decoder(value) : new Uint8Array(value);\n        const encoded = options.base64Encoder(valueView);\n        const hash = new options.md5();\n        hash.update(valueView);\n        input = {\n          ...input,\n          [prop.target]: encoded,\n          [prop.hash]: options.base64Encoder(await hash.digest())\n        };\n      }\n    }\n    return next({\n      ...args,\n      input\n    });\n  };\n}\nexport const ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport const getSsecPlugin = config => ({\n  applyToStack: clientStack => {\n    clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["ssecMiddleware","options","next","args","input","properties","target","hash","prop","value","valueView","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","byteLength","utf8Decoder","encoded","base64Encoder","md5","update","digest","ssecMiddlewareOptions","name","step","tags","override","getSsecPlugin","config","applyToStack","clientStack","add"],"sources":["D:/Work/00-Mogul/konva v2/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js"],"sourcesContent":["export function ssecMiddleware(options) {\n    return (next) => async (args) => {\n        let input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                const valueView = ArrayBuffer.isView(value)\n                    ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                    : typeof value === \"string\"\n                        ? options.utf8Decoder(value)\n                        : new Uint8Array(value);\n                const encoded = options.base64Encoder(valueView);\n                const hash = new options.md5();\n                hash.update(valueView);\n                input = {\n                    ...input,\n                    [prop.target]: encoded,\n                    [prop.hash]: options.base64Encoder(await hash.digest()),\n                };\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexport const ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport const getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACpC,OAAQC,IAAI,IAAK,MAAOC,IAAI,IAAK;IAC7B,IAAIC,KAAK,GAAG;MAAE,GAAGD,IAAI,CAACC;IAAM,CAAC;IAC7B,MAAMC,UAAU,GAAG,CACf;MACIC,MAAM,EAAE,gBAAgB;MACxBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,MAAM,EAAE,0BAA0B;MAClCC,IAAI,EAAE;IACV,CAAC,CACJ;IACD,KAAK,MAAMC,IAAI,IAAIH,UAAU,EAAE;MAC3B,MAAMI,KAAK,GAAGL,KAAK,CAACI,IAAI,CAACF,MAAM,CAAC;MAChC,IAAIG,KAAK,EAAE;QACP,MAAMC,SAAS,GAAGC,WAAW,CAACC,MAAM,CAACH,KAAK,CAAC,GACrC,IAAII,UAAU,CAACJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACM,UAAU,EAAEN,KAAK,CAACO,UAAU,CAAC,GAChE,OAAOP,KAAK,KAAK,QAAQ,GACrBR,OAAO,CAACgB,WAAW,CAACR,KAAK,CAAC,GAC1B,IAAII,UAAU,CAACJ,KAAK,CAAC;QAC/B,MAAMS,OAAO,GAAGjB,OAAO,CAACkB,aAAa,CAACT,SAAS,CAAC;QAChD,MAAMH,IAAI,GAAG,IAAIN,OAAO,CAACmB,GAAG,CAAC,CAAC;QAC9Bb,IAAI,CAACc,MAAM,CAACX,SAAS,CAAC;QACtBN,KAAK,GAAG;UACJ,GAAGA,KAAK;UACR,CAACI,IAAI,CAACF,MAAM,GAAGY,OAAO;UACtB,CAACV,IAAI,CAACD,IAAI,GAAGN,OAAO,CAACkB,aAAa,CAAC,MAAMZ,IAAI,CAACe,MAAM,CAAC,CAAC;QAC1D,CAAC;MACL;IACJ;IACA,OAAOpB,IAAI,CAAC;MACR,GAAGC,IAAI;MACPC;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AACA,OAAO,MAAMmB,qBAAqB,GAAG;EACjCC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,KAAK,CAAC;EACbC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,aAAa,GAAIC,MAAM,KAAM;EACtCC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAChC,cAAc,CAAC6B,MAAM,CAAC,EAAEN,qBAAqB,CAAC;EAClE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}